spring:
  application:
    name: NutriAI
  profiles:
    active: dev # dev, prod

  main:
    banner-mode: off
    lazy-initialization: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - email
              - profile
            redirect-uri: ${APP_DOMAIN}/api/auth/google
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            client-name: Google
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            scope:
              - email
              - public_profile
            redirect-uri: ${APP_DOMAIN}/api/auth/facebook
            client-name: Facebook
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
            issuer-uri: https://accounts.google.com
          facebook:
            authorization-uri: https://www.facebook.com/v18.0/dialog/oauth
            token-uri: https://graph.facebook.com/v18.0/oauth/access_token
            user-info-uri: https://graph.facebook.com/v18.0/me?fields=id,name,email,picture.type(large)&access_token=
            user-name-attribute: id

      resource-server:
        jwt:
          issuer-uri: https://accounts.google.com
          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
        opaque-token:
          introspection-uri: https://graph.facebook.com/v18.0/me
          client-id: ${FACEBOOK_CLIENT_ID}
          client-secret: ${FACEBOOK_CLIENT_SECRET}

  data:
    mongodb:
      uri: ${MONGO_URI}
      database: ${MONGO_DATABASE}
      auto-index-creation: true
      uuid-representation: standard

  jpa:
    show-sql: true

  mvc:
    path match:
      matching-strategy: ant_path_matcher
    problem-details:
      enabled: true

server:
  port: ${PORT:8080}
  error:
    whitelabel:
      enabled: true
  servlet:
    session:
      timeout: 30m
    encoding:
      charset: UTF-8
      force: true
      enabled: true

logging:
  config: classpath:logback-${spring.profiles.active}.xml
  level:
    "[org.springframework.data.mongodb.core.MongoTemplate]": DEBUG
    "[org.springframework.web]": DEBUG
    "[org.springframework.beans.factory]": DEBUG
    "[org.springframework.security]": DEBUG

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    operations-sorter: method
    tags-sorter: alpha
    path: /swagger-docs
    url: /openapi.yaml
  writer-with-order-by-keys: true

onesignal:
  app:
    id: ${ONESIGNAL_APP_ID}
  api:
    key: ${ONESIGNAL_API_KEY}
  url: https://api.onesignal.com/notifications

